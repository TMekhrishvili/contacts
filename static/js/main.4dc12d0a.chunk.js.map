{"version":3,"sources":["services/services.js","context/GlobalStates.jsx","pages/ContactList.jsx","components/Search.jsx","components/Footer.jsx","components/Header.jsx","components/AddForm.jsx","components/DeleteContact.jsx","components/CrudButtons.jsx","components/Filters.jsx","App.js","index.js"],"names":["fetchCity","Promise","resolve","reject","axios","get","then","response","data","catch","error","GlobalContext","createContext","GlobalProvider","props","useState","isModalVisible","setIsModalVisible","isDeleteModalVisible","setIsDeleteModalVisible","searchText","setSearchText","contactID","setContactID","filterType","setFilterType","Provider","value","children","columns","title","dataIndex","ContactList","setData","useContext","handleFavorite","url","put","fetchFavorite","console","log","useEffect","fetchContacts","res","map","key","isFavorite","StarFilled","style","color","fontSize","cursor","onClick","dataSource","pagination","size","rowSelection","type","onChange","selectedRowKeys","Search","radio","setRadio","cities","setCities","radioStyle","fontFamily","height","lineHeight","className","Group","e","target","name","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Item","placeholder","width","index","Option","cityName","display","flexDirection","htmlType","marginRight","Footer","Header","TextArea","Input","AddForm","isVisible","handleOk","handleCancel","gender","setGender","phoneNumberType","setPhoneNumberType","setContact","otherCity","setOtherCity","date","setDate","fetchContact","visible","onOk","onCancel","footer","additionalDetails","address","cityActionID","cityID","dob","firstname","genderID","lastname","otherPhoneNumber","PhoneNumber","phoneNumberTypeActionID","phoneNumberTypeID","phoneNumberTypeName","phoneNumber","phoneNumbersPost","PhoneNumberTypeID","post","postContact","allowClear","id","genderName","dateString","valuePropName","disabled","row","typeName","DeleteContact","CrudButtons","modalOpen","setModalOpen","delete","deleteContact","danger","Filters","App","defaults","baseURL","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAgFaA,EAAY,WAErB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAFD,qBAGAC,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,U,OCtFVC,EAAgBC,0BAEhBC,EAAiB,SAACC,GAAW,IAAD,EACOC,oBAAS,GADhB,mBAC9BC,EAD8B,KACdC,EADc,OAEmBF,oBAAS,GAF5B,mBAE9BG,EAF8B,KAERC,EAFQ,OAGDJ,mBAAS,IAHR,mBAG9BK,EAH8B,KAGlBC,EAHkB,OAIHN,mBAAS,GAJN,mBAI9BO,EAJ8B,KAInBC,EAJmB,OAKDR,mBAAS,GALR,mBAK9BS,EAL8B,KAKlBC,EALkB,KAMrC,OACI,cAACd,EAAce,SAAf,CACIC,MAAO,CACHX,iBACAC,oBACAC,uBACAC,0BACAC,aACAC,gBACAC,YACAC,eACAC,aACAC,iBAXR,SAaMX,EAAMc,Y,SClBdC,EAAU,CACZ,CACIC,MAAO,mFACPC,UAAW,YAEf,CACID,MAAO,8FACPC,UAAW,eAEf,CACID,MAAO,uCACPC,UAAW,YAEf,CACID,MAAO,iCACPC,UAAW,cAEf,CACID,MAAO,yDACPC,UAAW,WAEf,CACID,MAAO,8FACPC,UAAW,OAEf,CACID,MAAO,gHACPC,UAAW,qBAEf,CACID,MAAO,mDACPC,UAAW,eAgEJC,EA5DK,WAAO,IAAD,EACEjB,mBAAS,IADX,mBACfP,EADe,KACTyB,EADS,OAEsCC,qBAAWvB,GAA/DS,EAFc,EAEdA,WAAYG,EAFE,EAEFA,aAAcD,EAFZ,EAEYA,UAAWE,EAFvB,EAEuBA,WAEvCW,EAAiB,SAAAR,IF6DE,SAAAL,GACzB,IAAMc,EAAG,mCAA+Bd,GACxC,OAAO,IAAIrB,SAAQ,SAACC,EAASC,GACzBC,IAAMiC,IAAID,GACL9B,MAAK,SAAAC,GACFL,EAAQK,MAEXE,OAAM,SAAAC,GACHP,EAAOO,UEpEf4B,CAAcX,GACTrB,MAAK,SAAAC,GACFgC,QAAQC,IAAIjC,MAEfE,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,OAkCxB,OA/BA+B,qBAAU,WACa,IAAfjB,EFrDiB,SAAAJ,GACzB,IAAMgB,EAAG,kCAA8BhB,GACvC,OAAO,IAAInB,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAAI+B,GACL9B,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,SE8CXgC,CAActB,GACTd,MAAK,SAAAC,GACF,IAAMoC,EAAMpC,EAASqC,KAAI,SAAAjB,GAAK,kCAAUA,GAAV,IAAiBkB,IAAKlB,EAAML,UAAWwB,WAAYnB,EAAMmB,WAAa,cAACC,EAAA,EAAD,CAAYC,MAAO,CAAEC,MAAO,QAASC,SAAU,OAAQC,OAAQ,WAAaC,QAAS,kBAAMjB,EAAeR,EAAML,cAAiB,cAACyB,EAAA,EAAD,CAAYK,QAAS,kBAAMjB,EAAeR,EAAML,YAAY0B,MAAO,CAAEC,MAAO,OAAQC,SAAU,OAAQC,OAAQ,kBACnVlB,EAAQU,MAEXlC,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,MAEE,IAAfc,EFlCR,IAAIvB,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAFD,kCAGAC,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,SE8BNJ,MAAK,SAAAC,GACF,IAAMoC,EAAMpC,EAASqC,KAAI,SAAAjB,GAAK,kCAAUA,GAAV,IAAiBkB,IAAKlB,EAAML,UAAWwB,WAAYnB,EAAMmB,WAAa,cAACC,EAAA,EAAD,CAAYC,MAAO,CAAEC,MAAO,QAASC,SAAU,OAAQC,OAAQ,WAAaC,QAAS,kBAAMjB,EAAeR,EAAML,cAAiB,cAACyB,EAAA,EAAD,CAAYK,QAAS,kBAAMjB,EAAeR,EAAML,YAAY0B,MAAO,CAAEC,MAAO,OAAQC,SAAU,OAAQC,OAAQ,kBACnVlB,EAAQU,MAEXlC,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,MAEE,IAAfc,GFxDR,IAAIvB,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAFD,gCAGAC,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,SEoDNJ,MAAK,SAAAC,GACF,IAAMoC,EAAMpC,EAASqC,KAAI,SAAAjB,GAAK,kCAAUA,GAAV,IAAiBkB,IAAKlB,EAAML,UAAWwB,WAAYnB,EAAMmB,WAAa,cAACC,EAAA,EAAD,CAAYC,MAAO,CAAEC,MAAO,QAASC,SAAU,OAAQC,OAAQ,WAAaC,QAAS,kBAAMjB,EAAeR,EAAML,cAAiB,cAACyB,EAAA,EAAD,CAAYK,QAAS,kBAAMjB,EAAeR,EAAML,YAAY0B,MAAO,CAAEC,MAAO,OAAQC,SAAU,OAAQC,OAAQ,kBACnVlB,EAAQU,MAEXlC,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,QAGzB,CAACU,EAAYE,EAAWE,EAAYW,IAGnC,cAAC,IAAD,CACIN,QAASA,EACTwB,WAAY7C,EACZ8C,YAAY,EACZC,KAAK,SACLC,aAAc,CACVC,KAAM,QACNC,SAAU,SAACC,GACPpC,EAAaoC,Q,oDC2BlBC,EApHA,WAAO,IAAD,EACS7C,mBAAS,GADlB,mBACV8C,EADU,KACHC,EADG,OAEW/C,mBAAS,IAFpB,mBAEVgD,EAFU,KAEFC,EAFE,OAGwB9B,qBAAWvB,GAA5CU,EAHS,EAGTA,cAAeI,EAHN,EAGMA,cACvBgB,qBAAU,WACNzC,IACKM,MAAK,SAAAC,GACFyD,EAAUzD,MAEbE,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,QAErB,IAEH,IAAMuD,EAAa,CACfC,WAAY,UACZC,OAAQ,OACRC,WAAY,QAmBhB,OACI,sBAAKC,UAAU,mBAAf,UACI,eAAC,IAAMC,MAAP,CAAaZ,SAfJ,SAAAa,GACbT,EAASS,EAAEC,OAAO7C,QAcmBA,MAAOkC,EAAxC,UACI,cAAC,IAAD,CAAOb,MAAOiB,EAAYtC,MAAO,EAAjC,iFACA,cAAC,IAAD,CAAOqB,MAAOiB,EAAYtC,MAAO,EAAjC,wHAEJ,qBAAK0C,UAAU,gBAAf,SACI,eAAC,IAAD,CACII,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SApBC,SAACC,GACA,IAAVhB,GACAxC,EAAcwD,EAAOJ,OAmBbK,eAfO,SAACC,GACpBxC,QAAQC,IAAI,UAAWuC,IAUf,UAMKlB,EAEG,gCACI,cAAC,IAAKmB,KAAN,CACIP,KAAK,YADT,SAGI,cAAC,IAAD,CAAOQ,YAAY,2CAEvB,cAAC,IAAKD,KAAN,CACIP,KAAK,WADT,SAGI,cAAC,IAAD,CAAOQ,YAAY,qCAEvB,cAAC,IAAKD,KAAN,CACIP,KAAK,MADT,SAGI,cAAC,IAAD,CAAYzB,MA9CrB,CACfkC,MAAO,QA6CgDD,YAAY,kGAG/C,cAAC,IAAKD,KAAN,CACIP,KAAK,OADT,SAGI,cAAC,IAAD,CAAQQ,YAAY,uCAApB,SACKlB,EAAOnB,KAAI,SAACjB,EAAOwD,GAAR,OAAkB,cAAC,IAAOC,OAAR,CAA2BzD,MAAOwD,EAAlC,SAA0CxD,EAAM0D,UAA5BF,UAI1D,cAAC,IAAKH,KAAN,CACIP,KAAK,cADT,SAGI,cAAC,IAAD,CAAOQ,YAAY,qGAGzB,8BACE,cAAC,IAAKD,KAAN,CACIP,KAAK,OADT,SAGI,cAAC,IAAD,CAAOQ,YAAY,yFAI/B,sBAAKjC,MAAO,CAAEsC,QAAS,OAAQC,cAAe,OAA9C,UACI,cAAC,IAAKP,KAAN,UACI,cAAC,IAAD,CACIvB,KAAK,UACL+B,SAAS,SACTxC,MAAO,CAAEyC,YAAa,QAH1B,8CAQJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CACI5B,QAAS,WACL/B,EAAc,IACdI,EAAc,IAHtB,8FClGbiE,EANA,WACX,OACI,oDAAwB,4DCDjBC,EADA,kBAAM,gD,iBCEbC,EAAaC,IAAbD,SA+NOE,EA9NC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAAmB,EAC3BlF,mBAAS,IADkB,mBAChDgD,EADgD,KACxCC,EADwC,OAE3BjD,mBAAS,IAFkB,mBAEhDmF,EAFgD,KAExCC,EAFwC,OAGTpF,mBAAS,IAHA,mBAGhDqF,EAHgD,KAG/BC,EAH+B,OAIzBtF,mBAAS,IAJgB,mBAIvCuF,GAJuC,aAKrBvF,oBAAS,GALY,mBAKhDwF,EALgD,KAKrCC,EALqC,KAM/ClF,EAAcY,qBAAWvB,GAAzBW,UAN+C,EAO/BP,mBAAS,MAPsB,mBAOhD0F,EAPgD,KAO1CC,EAP0C,KAQvDjE,qBAAU,WNwDH,IAAIxC,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAFD,iCAGAC,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,SM5DVJ,MAAK,SAAAC,GACF8F,EAAmB9F,MAEtBE,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,MAGpBV,IACKM,MAAK,SAAAC,GACFyD,EAAUzD,MAEbE,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,MN6BjB,IAAIT,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAFD,uBAGAC,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,SM/BVJ,MAAK,SAAAC,GACF4F,EAAU5F,MAEbE,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,MAGhBY,EAAY,GNGI,SAAAA,GACxB,IAAMc,EAAG,uBAAmBd,GAC5B,OAAO,IAAIrB,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAAI+B,GACL9B,MAAK,SAAAC,GACFL,EAAQK,EAASC,SAEpBC,OAAM,SAAAC,GACHP,EAAOO,SMVXiG,CAAarF,GACRhB,MAAK,SAAAC,GACF+F,EAAW/F,MAEdE,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,QAGzB,CAACY,IA2BJ,OACI,cAAC,IAAD,CACIQ,MAAM,6KACN8E,QAASb,EACTc,KAAMb,EACNc,SAAUb,EACVc,QAAQ,EALZ,SAOI,cAAC,IAAD,CACItC,KAAK,QACLC,cAAe,CACXsC,kBAAmB,KACnBC,QAAS,KACTC,cAAc,EACdC,OAAQ,KACR9B,SAAU,KACV+B,IAAK,KACLC,UAAW,KACXC,SAAU,KACVxE,YAAY,EACZyE,SAAU,KACVC,iBAAkB,KAClBC,YAAa,KACbC,yBAAyB,EACzBC,kBAAmB,KACnBC,oBAAqB,KACrBC,YAAa,MAEjBjD,SArDK,SAACC,GACd,IAAMrE,EAAI,2BAAQqE,GAAR,IAAgBuC,IAAKX,EAAMqB,iBAAkB,CAAC,CAAEH,kBAAmB9C,EAAO8C,kBAAmBE,YAAahD,EAAOgD,uBACpHrH,EAAKuH,yBACLvH,EAAKiH,YNmEO,SAAAjH,GAEvB,OAAO,IAAIP,SAAQ,SAACC,EAASC,GACzBC,IAAM4H,KAFD,eAEWxH,GACXF,MAAK,SAAAC,GACFL,EAAQK,MAEXE,OAAM,SAAAC,GACHP,EAAOO,SM1EfuH,CAAYzH,GACPF,MAAK,SAAAC,GACFgC,QAAQC,IAAI,IAAKjC,MAEpBE,OAAM,SAAAC,GACH6B,QAAQC,IAAI,IAAK9B,OA6CjBoE,eAzCW,SAACC,GACpBxC,QAAQC,IAAI,UAAWuC,IAmBnB,SAuBI,gCACI,cAAC,IAAKC,KAAN,CACIP,KAAK,YADT,SAGI,cAAC,IAAD,CACIQ,YAAY,2CAIpB,cAAC,IAAKD,KAAN,CACIP,KAAK,WADT,SAGI,cAAC,IAAD,CACIQ,YAAY,qCAIpB,cAAC,IAAKD,KAAN,CACIP,KAAK,WADT,SAGI,cAAC,IAAD,CACIQ,YAAY,iCACZiD,YAAU,EAFd,SAIKhC,EAAOtD,KAAI,SAACjB,EAAOwD,GAAR,OAAkB,cAAC,IAAOC,OAAR,CAA2BzD,MAAOA,EAAMwG,GAAxC,SAA6CxG,EAAMyG,YAA/BjD,UAI1D,cAAC,IAAKH,KAAN,CACIP,KAAK,MADT,SAGI,cAAC,IAAD,CACIzB,MAxEL,CACfkC,MAAO,QAwEaD,YAAY,8FACZvB,SAtEL,SAAC+C,EAAM4B,GACtB3B,EAAQ2B,GACR9F,QAAQC,IAAIiE,EAAM4B,QAwEN,cAAC,IAAKrD,KAAN,CACIP,KAAK,SADT,SAGI,cAAC,IAAD,CAAQQ,YAAY,uCAASiD,YAAU,EAAvC,SACKnE,EAAOnB,KAAI,SAACjB,EAAOwD,GAAR,OAAkB,cAAC,IAAOC,OAAR,CAA2BzD,MAAOA,EAAMwG,GAAxC,SAA6CxG,EAAM0D,UAA/BF,UAG1D,sBAAKnC,MAAO,CAAEsC,QAAS,OAAQC,cAAe,OAA9C,UACI,cAAC,IAAKP,KAAN,CAAWP,KAAK,eAAezB,MAAO,CAAEkC,MAAO,QAAUoD,cAAc,UAAvE,SACI,cAAC,IAAD,CAAU5E,SAAU,kBAAM8C,GAAcD,IAAxC,+FAEJ,cAAC,IAAKvB,KAAN,CAAWP,KAAK,WAAWzB,MAAO,CAAEkC,MAAO,QAA3C,SACI,cAAC,IAAD,CACID,YAAY,wFACZsD,UAAWhC,SAIvB,cAAC,IAAKvB,KAAN,CACIP,KAAK,UADT,SAGI,cAAC,IAAD,CACIQ,YAAY,6DAGpB,cAAC,IAAKD,KAAN,CACIP,KAAK,oBADT,SAGI,cAACmB,EAAD,CACI4C,IAAK,EACLvD,YAAY,gIAIpB,sBAAKjC,MAAO,CAAEsC,QAAS,OAAQC,cAAe,OAA9C,UACI,cAAC,IAAKP,KAAN,CACIP,KAAK,oBACLzB,MAAO,CAAEkC,MAAO,OAAQO,YAAa,QAFzC,SAII,cAAC,IAAD,CACIR,YAAY,2BACZiD,YAAU,EAFd,SAIK9B,EAAgBxD,KAAI,SAACjB,EAAOwD,GAAR,OAAkB,cAAC,IAAOC,OAAR,CAA2BzD,MAAOA,EAAMwG,GAAxC,SAA6CxG,EAAM8G,UAA/BtD,UAGnE,cAAC,IAAKH,KAAN,CACIP,KAAK,cACLzB,MAAO,CAAEkC,MAAO,QAFpB,SAII,cAAC,IAAD,CACID,YAAY,qGAIxB,cAAC,IAAKD,KAAN,CAAWP,KAAK,0BAA0B6D,cAAc,UAAxD,SACI,cAAC,IAAD,gLAEJ,sBAAKtF,MAAO,CAAEsC,QAAS,OAAQC,cAAe,OAA9C,UACI,cAAC,IAAKP,KAAN,CAAWP,KAAK,sBAAsBzB,MAAO,CAAEkC,MAAO,OAAQO,YAAa,QAA3E,SACI,cAAC,IAAD,CACIR,YAAY,gFAGpB,cAAC,IAAKD,KAAN,CAAWP,KAAK,mBAAmBzB,MAAO,CAAEkC,MAAO,QAAnD,SACI,cAAC,IAAD,CACID,YAAY,+FAIxB,cAAC,IAAKD,KAAN,CAAWP,KAAK,aAAa6D,cAAc,UAA3C,SACI,cAAC,IAAD,iEAEJ,cAAC,IAAKtD,KAAN,UACI,cAAC,IAAD,CAAQvB,KAAK,UAAU+B,SAAS,SAAhC,kECzMTkD,EAbO,SAAC,GAA2C,IAAzC3C,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC1C,OACI,cAAC,IAAD,CACInE,MAAM,wFACN8E,QAASb,EACTc,KAAMb,EACNc,SAAUb,EAJd,SAMI,6LCyFG0C,EA7FK,WAAO,IAAD,EASlBzG,qBAAWvB,GAPXK,EAFkB,EAElBA,eACAC,EAHkB,EAGlBA,kBACAC,EAJkB,EAIlBA,qBACAC,EALkB,EAKlBA,wBACAG,EANkB,EAMlBA,UACAC,EAPkB,EAOlBA,aACAC,EARkB,EAQlBA,WARkB,EAWYT,oBAAS,GAXrB,mBAWf6H,EAXe,KAWJC,EAXI,KAsDtB,OACI,sBAAKxE,UAAU,eAAf,UACI,cAAC,IAAD,CACIvC,MAAM,yDACN8E,QAASgC,EACT9B,SAAU,kBAAM+B,GAAa,IAC7B9B,OAAQ,CACJ,cAAC,IAAD,CAEItD,KAAK,UACLL,QAAS,kBAAMyF,GAAa,IAHhC,2CACQ,WANhB,SAcI,2KAGJ,cAAC,EAAD,CACI9C,UAAW/E,EACXgF,SAnDK,WACb/E,GAAkB,IAmDVgF,aAjDS,WACjBhF,GAAkB,MAmDd,cAAC,EAAD,CACI8E,UAAW7E,EACX8E,SA1CkB,WAC1B7E,GAAwB,GR8CH,SAAAG,GACzB,IAAMc,EAAG,uBAAmBd,GAC5B,OAAO,IAAIrB,SAAQ,SAACC,EAASC,GACzBC,IAAM0I,OAAO1G,GACR9B,MAAK,SAAAC,GACFL,EAAQK,MAEXE,OAAM,SAAAC,GACHP,EAAOO,SQrDfqI,CAAczH,GACThB,MAAK,SAAAC,GACFgC,QAAQC,IAAIjC,GACZgB,EAAa,MAEhBd,OAAM,SAAAC,GACH6B,QAAQC,IAAI9B,OAmCZuF,aAhCsB,WAC9B9E,GAAwB,MAiCJ,IAAfK,GAAoB,qCACjB,cAAC,IAAD,CAAQiC,KAAK,UAAUL,QAxEvB,WACRnC,GAAkB,IAuEV,8DACA,cAAC,IAAD,CAAQmC,QArEP,WACS,IAAd9B,EACAuH,GAAa,GAEb5H,GAAkB,IAiEd,gFACA,cAAC,IAAD,CAAQmC,QAvDW,WACT,IAAd9B,EACAuH,GAAa,GAEb1H,GAAwB,IAmDqB6H,QAAM,EAA/C,mDC9EDC,EAZC,WAAO,IACXxH,EAAkBS,qBAAWvB,GAA7Bc,cAER,OACI,sBAAK4C,UAAU,eAAf,UACI,cAAC,IAAD,CAAQjB,QAAS,kBAAM3B,EAAc,IAArC,iIACA,cAAC,IAAD,CAAQ2B,QAAS,kBAAM3B,EAAc,IAArC,2HACA,cAAC,IAAD,CAAQ2B,QAAS,kBAAM3B,EAAc,IAArC,oFCyBGyH,EAzBH,WACV,OACE,cAAC,EAAD,UACE,sBAAK7E,UAAU,YAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,OAAf,UACE,0BAASA,UAAU,eAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,yBAASA,UAAU,SAAnB,SACE,cAAC,EAAD,SAGJ,wBAAQA,UAAU,SAAlB,SACE,cAAC,EAAD,YCxBVjE,IAAM+I,SAASC,QAAU,yCACzBhJ,IAAM+I,SAASE,QAAQrB,KAAK,gBAAkB,mBAC9C5H,IAAM+I,SAASE,QAAQrB,KAAK,+BAAiC,IAE7DsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4dc12d0a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchContacts = searchText => {\r\n    const url = `api/contacts?searchText=${searchText}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchDeleted = () => {\r\n    const url = `api/contacts/deletedContacts`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchFavorites = () => {\r\n    const url = `api/contacts/favoritedContacts`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchContact = contactID => {\r\n    const url = `api/contacts/${contactID}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchGender = () => {\r\n    const url = `api/contacts/gender`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchPhoneNumberType = () => {\r\n    const url = `api/contacts/phoneNumberTypes`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchCity = () => {\r\n    const url = `api/contacts/city`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const deleteContact = contactID => {\r\n    const url = `api/contacts/${contactID}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(url)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchFavorite = contactID => {\r\n    const url = `api/contacts/addFavorite/${contactID}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(url)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const postContact = data => {\r\n    const url = `api/contacts`\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url, data)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};","import React, { createContext, useState } from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = (props) => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false)\r\n    const [searchText, setSearchText] = useState('')\r\n    const [contactID, setContactID] = useState(0)\r\n    const [filterType, setFilterType] = useState(0)\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                isModalVisible,\r\n                setIsModalVisible,\r\n                isDeleteModalVisible,\r\n                setIsDeleteModalVisible,\r\n                searchText,\r\n                setSearchText,\r\n                contactID,\r\n                setContactID,\r\n                filterType,\r\n                setFilterType\r\n            }}>\r\n            { props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Table } from 'antd'\r\nimport { fetchContacts, fetchDeleted, fetchFavorites, fetchFavorite } from '../services/services'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\nimport { StarFilled } from '@ant-design/icons'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'სახელი და გვარი',\r\n        dataIndex: 'fullname',\r\n    },\r\n    {\r\n        title: 'მობილურის ნომერი',\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n    {\r\n        title: 'ქალაქი',\r\n        dataIndex: 'cityName',\r\n    },\r\n    {\r\n        title: 'სქესი',\r\n        dataIndex: 'genderName',\r\n    },\r\n    {\r\n        title: 'მისამართი',\r\n        dataIndex: 'address',\r\n    },\r\n    {\r\n        title: 'დაბადების თარიღი',\r\n        dataIndex: 'dob',\r\n    },\r\n    {\r\n        title: 'დამატებითი დეტალები',\r\n        dataIndex: 'additionalDetails',\r\n    },\r\n    {\r\n        title: 'ფავორიტი',\r\n        dataIndex: 'isFavorite',\r\n    },\r\n];\r\n\r\nconst ContactList = () => {\r\n    const [data, setData] = useState([])\r\n    const { searchText, setContactID, contactID, filterType } = useContext(GlobalContext)\r\n\r\n    const handleFavorite = value => {\r\n        fetchFavorite(value)\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        if (filterType === 0) {\r\n            fetchContacts(searchText)\r\n                .then(response => {\r\n                    const res = response.map(value => ({ ...value, key: value.contactID, isFavorite: value.isFavorite ? <StarFilled style={{ color: 'green', fontSize: '24px', cursor: 'pointer' }} onClick={() => handleFavorite(value.contactID)} /> : <StarFilled onClick={() => handleFavorite(value.contactID)} style={{ color: 'gray', fontSize: '24px', cursor: 'pointer' }} /> }))\r\n                    setData(res)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        } else if (filterType === 1) {\r\n            fetchFavorites()\r\n                .then(response => {\r\n                    const res = response.map(value => ({ ...value, key: value.contactID, isFavorite: value.isFavorite ? <StarFilled style={{ color: 'green', fontSize: '24px', cursor: 'pointer' }} onClick={() => handleFavorite(value.contactID)} /> : <StarFilled onClick={() => handleFavorite(value.contactID)} style={{ color: 'gray', fontSize: '24px', cursor: 'pointer' }} /> }))\r\n                    setData(res)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        } else if (filterType === 2) {\r\n            fetchDeleted()\r\n                .then(response => {\r\n                    const res = response.map(value => ({ ...value, key: value.contactID, isFavorite: value.isFavorite ? <StarFilled style={{ color: 'green', fontSize: '24px', cursor: 'pointer' }} onClick={() => handleFavorite(value.contactID)} /> : <StarFilled onClick={() => handleFavorite(value.contactID)} style={{ color: 'gray', fontSize: '24px', cursor: 'pointer' }} /> }))\r\n                    setData(res)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }, [searchText, contactID, filterType, handleFavorite]);\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            pagination={false}\r\n            size=\"middle\"\r\n            rowSelection={{\r\n                type: 'radio',\r\n                onChange: (selectedRowKeys) => {\r\n                    setContactID(selectedRowKeys)\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ContactList","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, Radio, Input, Button, DatePicker, Select, } from 'antd'\r\nimport { fetchCity } from '../services/services'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\n\r\nconst Search = () => {\r\n    const [radio, setRadio] = useState(0)\r\n    const [cities, setCities] = useState([])\r\n    const { setSearchText, setFilterType } = useContext(GlobalContext)\r\n    useEffect(() => {\r\n        fetchCity()\r\n            .then(response => {\r\n                setCities(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n\r\n    const radioStyle = {\r\n        fontFamily: 'sylfaen',\r\n        height: '22px',\r\n        lineHeight: '30px',\r\n    };\r\n    const datePicker = {\r\n        width: '100%',\r\n    }\r\n\r\n    const onChange = e => {\r\n        setRadio(e.target.value)\r\n    }\r\n    const onFinish = (values) => {\r\n        if (radio === 0) {\r\n            setSearchText(values.name)\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <Radio.Group onChange={onChange} value={radio}>\r\n                <Radio style={radioStyle} value={0}>სწრაფი ძიება</Radio>\r\n                <Radio style={radioStyle} value={1}>გაფართოებული ძიება</Radio>\r\n            </Radio.Group>\r\n            <div className=\"search-fields\">\r\n                <Form\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    {radio\r\n                        ?\r\n                        <div>\r\n                            <Form.Item\r\n                                name=\"firstName\"\r\n                            >\r\n                                <Input placeholder=\"სახელი\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"lastName\"\r\n                            >\r\n                                <Input placeholder=\"გვარი\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"dob\"\r\n                            >\r\n                                <DatePicker style={datePicker} placeholder=\"დაბადების თარიღი\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"city\"\r\n                            >\r\n                                <Select placeholder=\"ქალაქი\">\r\n                                    {cities.map((value, index) => <Select.Option key={index} value={index}>{value.cityName}</Select.Option>)}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"phonenumber\"\r\n                            >\r\n                                <Input placeholder=\"ტელეფონის ნომერი\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                        : <div>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                            >\r\n                                <Input placeholder=\"სახელი ან გვარი\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                    }\r\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ marginRight: '10px' }}\r\n                            >\r\n                                ძიება\r\n                        </Button>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setSearchText('')\r\n                                    setFilterType(0)\r\n                                }}\r\n                            >\r\n                                გასუფთავება\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <p>Contacts Page &#169; <strong>Tamar Mekhrishvili</strong></p>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Header = () => <h1>contacts page</h1>\r\nexport default Header\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Modal, Checkbox, Input, DatePicker, Select, Button } from 'antd'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\nimport { fetchContact, fetchCity, fetchGender, postContact, fetchPhoneNumberType } from '../services/services'\r\nconst { TextArea } = Input;\r\nconst AddForm = ({ isVisible, handleOk, handleCancel }) => {\r\n    const [cities, setCities] = useState([])\r\n    const [gender, setGender] = useState([])\r\n    const [phoneNumberType, setPhoneNumberType] = useState([])\r\n    const [contact, setContact] = useState({})\r\n    const [otherCity, setOtherCity] = useState(false)\r\n    const { contactID } = useContext(GlobalContext)\r\n    const [date, setDate] = useState(null)\r\n    useEffect(() => {\r\n        fetchPhoneNumberType()\r\n            .then(response => {\r\n                setPhoneNumberType(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        fetchCity()\r\n            .then(response => {\r\n                setCities(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        fetchGender()\r\n            .then(response => {\r\n                setGender(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        if (contactID > 0) {\r\n            fetchContact(contactID)\r\n                .then(response => {\r\n                    setContact(response)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }, [contactID]);\r\n\r\n    const onFinish = (values) => {\r\n        const data = { ...values, dob: date, phoneNumbersPost: [{ phoneNumberTypeID: values.phoneNumberTypeID, phoneNumber: values.phoneNumber }] }\r\n        delete data.PhoneNumberTypeID\r\n        delete data.PhoneNumber\r\n        postContact(data)\r\n            .then(response => {\r\n                console.log(\"1\", response)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"2\", error)\r\n            })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const datePicker = {\r\n        width: '100%',\r\n    }\r\n\r\n    const handleDate = (date, dateString) => {\r\n        setDate(dateString)\r\n        console.log(date, dateString)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"კონტაქტის დამატება/რედაქტირება\"\r\n            visible={isVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={false}\r\n        >\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    additionalDetails: null,\r\n                    address: null,\r\n                    cityActionID: false,\r\n                    cityID: null,\r\n                    cityName: null,\r\n                    dob: null,\r\n                    firstname: null,\r\n                    genderID: null,\r\n                    isFavorite: false,\r\n                    lastname: null,\r\n                    otherPhoneNumber: null,\r\n                    PhoneNumber: null,\r\n                    phoneNumberTypeActionID: false,\r\n                    phoneNumberTypeID: null,\r\n                    phoneNumberTypeName: null,\r\n                    phoneNumber: null\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <div>\r\n                    <Form.Item\r\n                        name=\"firstname\"\r\n                    >\r\n                        <Input\r\n                            placeholder=\"სახელი\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"lastname\"\r\n                    >\r\n                        <Input\r\n                            placeholder=\"გვარი\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"genderID\"\r\n                    >\r\n                        <Select\r\n                            placeholder=\"სქესი\"\r\n                            allowClear\r\n                        >\r\n                            {gender.map((value, index) => <Select.Option key={index} value={value.id}>{value.genderName}</Select.Option>)}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"dob\"\r\n                    >\r\n                        <DatePicker\r\n                            style={datePicker}\r\n                            placeholder=\"დაბადების თარიღი\"\r\n                            onChange={handleDate}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"cityID\"\r\n                    >\r\n                        <Select placeholder=\"ქალაქი\" allowClear>\r\n                            {cities.map((value, index) => <Select.Option key={index} value={value.id}>{value.cityName}</Select.Option>)}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <Form.Item name=\"cityActionID\" style={{ width: '100%' }} valuePropName=\"checked\">\r\n                            <Checkbox onChange={() => setOtherCity(!otherCity)}>დაამატე ქალაქი</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"cityName\" style={{ width: '100%' }}>\r\n                            <Input\r\n                                placeholder=\"დაამატეთ ქალაქი\"\r\n                                disabled={!otherCity}\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <Form.Item\r\n                        name=\"address\"\r\n                    >\r\n                        <Input\r\n                            placeholder=\"მისამართი\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"additionalDetails\"\r\n                    >\r\n                        <TextArea\r\n                            row={4}\r\n                            placeholder=\"დამატებითი ინფორმაცია\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <Form.Item\r\n                            name=\"phoneNumberTypeID\"\r\n                            style={{ width: '100%', marginRight: '10px' }}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"ტიპი\"\r\n                                allowClear\r\n                            >\r\n                                {phoneNumberType.map((value, index) => <Select.Option key={index} value={value.id}>{value.typeName}</Select.Option>)}\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"phoneNumber\"\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"შეიყვანეთ ნომერი\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <Form.Item name=\"phoneNumberTypeActionID\" valuePropName=\"checked\">\r\n                        <Checkbox >დაამატე სხვა ტელეფონის ნომერი</Checkbox>\r\n                    </Form.Item>\r\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <Form.Item name=\"phoneNumberTypeName\" style={{ width: '100%', marginRight: '10px' }}>\r\n                            <Input\r\n                                placeholder=\"დაამატეთ ტიპი\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"otherPhoneNumber\" style={{ width: '100%' }}>\r\n                            <Input\r\n                                placeholder=\"დაამატეთ ნომერი\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <Form.Item name=\"isFavorite\" valuePropName=\"checked\">\r\n                        <Checkbox >ფავორიტი</Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            შენახვა\r\n                        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nconst DeleteContact = ({ isVisible, handleOk, handleCancel }) => {\r\n    return (\r\n        <Modal\r\n            title=\"კონტაქტის წაშლა\"\r\n            visible={isVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n        >\r\n            <p>წაიშალოს მონიშნული კონტაქტი?</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteContact\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button, Modal } from 'antd'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\nimport AddForm from './AddForm'\r\nimport DeleteContact from './DeleteContact'\r\nimport { deleteContact } from '../services/services'\r\n\r\nconst CrudButtons = () => {\r\n    const {\r\n        isModalVisible,\r\n        setIsModalVisible,\r\n        isDeleteModalVisible,\r\n        setIsDeleteModalVisible,\r\n        contactID,\r\n        setContactID,\r\n        filterType\r\n    } = useContext(GlobalContext)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const add = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const edit = () => {\r\n        if (contactID === 0) {\r\n            setModalOpen(true)\r\n        } else {\r\n            setIsModalVisible(true)\r\n        }\r\n    }\r\n    const handleOk = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n\r\n    const showDeleteContactModal = () => {\r\n        if (contactID === 0) {\r\n            setModalOpen(true)\r\n        } else {\r\n            setIsDeleteModalVisible(true)\r\n        }\r\n    }\r\n    const handleDeleteContactOk = () => {\r\n        setIsDeleteModalVisible(false)\r\n        deleteContact(contactID)\r\n            .then(response => {\r\n                console.log(response)\r\n                setContactID(0)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    const handleDeleteContactCancel = () => {\r\n        setIsDeleteModalVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"crud-buttons\">\r\n            <Modal\r\n                title=\"ყურადღება\"\r\n                visible={modalOpen}\r\n                onCancel={() => setModalOpen(false)}\r\n                footer={[\r\n                    <Button\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                        onClick={() => setModalOpen(false)}\r\n                    >\r\n                        კარგი\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <p>გთხოვთ, მონიშნოთ ჩანაწერი.</p>\r\n            </Modal>\r\n\r\n            <AddForm\r\n                isVisible={isModalVisible}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n            />\r\n\r\n            <DeleteContact\r\n                isVisible={isDeleteModalVisible}\r\n                handleOk={handleDeleteContactOk}\r\n                handleCancel={handleDeleteContactCancel}\r\n            />\r\n            {filterType === 0 && <>\r\n                <Button type=\"primary\" onClick={add}>დამატება</Button>\r\n                <Button onClick={edit}>რედაქტირება</Button>\r\n                <Button onClick={showDeleteContactModal} danger>წაშლა</Button>\r\n            </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudButtons\r\n","import React, { useContext } from 'react'\r\nimport { Button } from 'antd'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\n\r\nconst Filters = () => {\r\n    const { setFilterType } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <div className=\"crud-buttons\">\r\n            <Button onClick={() => setFilterType(1)}>ფავორიტების გამოტანა</Button>\r\n            <Button onClick={() => setFilterType(2)}>წაშლილების გამოტანა</Button>\r\n            <Button onClick={() => setFilterType(0)}>გასუფთავება</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import React from 'react'\r\nimport './reset.css'\r\nimport './index.css'\r\nimport ContactList from './pages/ContactList'\r\nimport Search from './components/Search'\r\nimport Footer from './components/Footer'\r\nimport Header from './components/Header'\r\nimport CrudButtons from './components/CrudButtons'\r\nimport Filters from './components/Filters'\r\nimport { GlobalProvider } from './context/GlobalStates'\r\n\r\nconst App = () => {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"container\">\r\n        <header className=\"header\">\r\n          <Header />\r\n        </header>\r\n        <div className=\"main\">\r\n          <section className=\"contact-list\">\r\n            <Filters />\r\n            <CrudButtons />\r\n            <ContactList />\r\n          </section>\r\n          <section className=\"search\">\r\n            <Search />\r\n          </section>\r\n        </div>\r\n        <footer className=\"footer\">\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    </GlobalProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://young-tor-17286.herokuapp.com/';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}