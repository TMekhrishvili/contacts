{"version":3,"sources":["services/services.js","context/GlobalStates.jsx","pages/ContactList.jsx","components/Search.jsx","components/Footer.jsx","components/Header.jsx","components/CreateUpdate.jsx","components/DeleteContact.jsx","components/Notification.jsx","components/GeneralModal.jsx","components/Read.jsx","components/CrudButtons.jsx","App.js","index.js"],"names":["fetchCity","Promise","resolve","reject","axios","get","then","response","console","log","data","catch","error","GlobalContext","createContext","GlobalProvider","props","useState","isModalVisible","setIsModalVisible","isDeleteModalVisible","setIsDeleteModalVisible","searchText","setSearchText","contactID","setContactID","Provider","value","children","columns","title","dataIndex","render","dob","moment","format","ContactList","setData","useContext","useEffect","res","map","key","_id","favorite","StarFilled","style","color","fontSize","cursor","onClick","dataSource","size","rowSelection","type","onChange","selectedRowKeys","Search","radio","setRadio","cities","setCities","radioStyle","fontFamily","height","lineHeight","className","Group","e","target","name","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Item","placeholder","width","index","Option","cityName","display","flexDirection","htmlType","marginRight","Footer","Header","TextArea","Input","CreateUpdate","gender","setGender","setDate","url","fetchContact","city","status","post","addContact","date","dateString","allowClear","id","row","valuePropName","defaultChecked","DeleteContact","isVisible","handleOk","handleCancel","visible","onOk","onCancel","Notification","GeneralModal","header","footer","Read","CrudButtons","settype","childForModal","danger","App","defaults","baseURL","headers","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.14605deb.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport const addContact = data => {\r\n    const url = `add`\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url, data)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\nexport const fetchContacts = () => {\r\n    const url = `get/contacts`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(response)\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\nexport const fetchGender = () => {\r\n    const url = `get/gender`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(response)\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\nexport const fetchCity = () => {\r\n    const url = `get/cities`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(response)\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\n//----------------------------------------------\r\n\r\nexport const fetchContact = contactID => {\r\n    const url = `api/contacts/${contactID}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\nexport const deleteContact = contactID => {\r\n    const url = `api/contacts/${contactID}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(url)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\nexport const fetchFavorite = contactID => {\r\n    const url = `api/contacts/addFavorite/${contactID}`\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(url)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n    });\r\n};\r\n\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = (props) => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false)\r\n    const [searchText, setSearchText] = useState('')\r\n    const [contactID, setContactID] = useState(0)\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                isModalVisible,\r\n                setIsModalVisible,\r\n                isDeleteModalVisible,\r\n                setIsDeleteModalVisible,\r\n                searchText,\r\n                setSearchText,\r\n                contactID,\r\n                setContactID\r\n            }}>\r\n            { props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Table } from 'antd'\r\nimport { fetchContacts, fetchFavorite } from '../services/services'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\nimport { StarFilled } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'FullName',\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: 'Date of Bithday',\r\n        dataIndex: 'dob',\r\n        render(dob) {\r\n            return dob ? moment(dob).format(\"DD.MM.YYYY\") : \" - \";\r\n        },\r\n    },\r\n    {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n    },\r\n    {\r\n        title: 'City',\r\n        dataIndex: 'city',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n    },\r\n    {\r\n        title: 'Mobile',\r\n        dataIndex: 'mobileNumber',\r\n    },\r\n    {\r\n        title: 'Comment',\r\n        dataIndex: 'comment',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n    },\r\n    {\r\n        title: 'Favorite',\r\n        dataIndex: 'favorite',\r\n    },\r\n];\r\n\r\nconst ContactList = () => {\r\n    const [data, setData] = useState([])\r\n    const { searchText, setContactID, contactID } = useContext(GlobalContext)\r\n\r\n    const handleFavorite = value => {\r\n        // fetchFavorite(value)\r\n        //     .then(response => {\r\n        //         console.log(response)\r\n        //     })\r\n        //     .catch(error => {\r\n        //         console.log(error)\r\n        //     })\r\n    }\r\n    useEffect(() => {\r\n        fetchContacts()\r\n            .then(response => {\r\n                const res = response.map(value => ({ ...value, key: value._id, favorite: value.favorite ? <StarFilled style={{ color: 'green', fontSize: '24px', cursor: 'pointer' }} onClick={() => handleFavorite(value._id)} /> : <StarFilled onClick={() => handleFavorite(value._id)} style={{ color: 'gray', fontSize: '24px', cursor: 'pointer' }} /> }))\r\n                setData(res)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, [contactID]);\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            size=\"small\"\r\n            rowSelection={{\r\n                type: 'radio',\r\n                onChange: (selectedRowKeys) => {\r\n                    setContactID(selectedRowKeys)\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ContactList","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, Radio, Input, Button, DatePicker, Select, } from 'antd'\r\nimport { fetchCity } from '../services/services'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\n\r\nconst Search = () => {\r\n    const [radio, setRadio] = useState(0)\r\n    const [cities, setCities] = useState([])\r\n    const { setSearchText } = useContext(GlobalContext)\r\n    useEffect(() => {\r\n        fetchCity()\r\n            .then(response => {\r\n                setCities(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n\r\n    const radioStyle = {\r\n        fontFamily: 'sylfaen',\r\n        height: '22px',\r\n        lineHeight: '30px',\r\n    };\r\n    const datePicker = {\r\n        width: '100%',\r\n    }\r\n\r\n    const onChange = e => {\r\n        setRadio(e.target.value)\r\n    }\r\n    const onFinish = (values) => {\r\n        if (radio === 0) {\r\n            setSearchText(values.name)\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <Radio.Group onChange={onChange} value={radio}>\r\n                <Radio style={radioStyle} value={0}>სწრაფი ძიება</Radio>\r\n                <Radio style={radioStyle} value={1}>გაფართოებული ძიება</Radio>\r\n            </Radio.Group>\r\n            <div className=\"search-fields\">\r\n                <Form\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    {radio\r\n                        ?\r\n                        <div>\r\n                            <Form.Item\r\n                                name=\"firstName\"\r\n                            >\r\n                                <Input placeholder=\"სახელი\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"lastName\"\r\n                            >\r\n                                <Input placeholder=\"გვარი\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"dob\"\r\n                            >\r\n                                <DatePicker style={datePicker} placeholder=\"დაბადების თარიღი\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"city\"\r\n                            >\r\n                                <Select placeholder=\"ქალაქი\">\r\n                                    {cities.map((value, index) => <Select.Option key={index} value={index}>{value.cityName}</Select.Option>)}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"phonenumber\"\r\n                            >\r\n                                <Input placeholder=\"ტელეფონის ნომერი\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                        : <div>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                            >\r\n                                <Input placeholder=\"სახელი ან გვარი\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                    }\r\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ marginRight: '10px' }}\r\n                            >\r\n                                ძიება\r\n                        </Button>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setSearchText('')\r\n                                }}\r\n                            >\r\n                                გასუფთავება\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <p>Contacts Page &#169; <strong>Tamar Mekhrishvili</strong></p>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Header = () => <h1>contacts page</h1>\r\nexport default Header\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Checkbox, Input, DatePicker, Select, Button } from 'antd'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\nimport moment from 'moment'\r\nimport { fetchContact, fetchCity, fetchGender, addContact } from '../services/services'\r\nconst { TextArea } = Input;\r\n\r\nconst CreateUpdate = () => {\r\n\r\n    const [cities, setCities] = useState([])\r\n    const [gender, setGender] = useState([])\r\n    const { contactID } = useContext(GlobalContext)\r\n    const [date, setDate] = useState(null)\r\n\r\n    const datePicker = {\r\n        width: '100%',\r\n    }\r\n\r\n    const handleDate = (date, dateString) => {\r\n        setDate(dateString)\r\n        console.log(moment(date).format('MM.DD.YYYY'))\r\n    }\r\n    const onFinish = (values) => {\r\n        const data = { ...values, dob: moment(values.dob).format('DD.MM.YYYY') }\r\n        console.log(data)\r\n        addContact(data)\r\n            .then(response => {\r\n                console.log(\"1\", response)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"2\", error)\r\n            })\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCity()\r\n            .then(response => {\r\n                setCities(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        fetchGender()\r\n            .then(response => {\r\n                setGender(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        if (contactID > 0) {\r\n            fetchContact(contactID)\r\n                .then(response => {\r\n                    console.log(response)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }, [contactID]);\r\n\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                city: \"Tbilisi\",\r\n                gender: 1,\r\n                status: true,\r\n                favorite: true\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <div>\r\n                <Form.Item\r\n                    name=\"fullName\"\r\n                >\r\n                    <Input\r\n                        placeholder=\"Fullname\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"dob\"\r\n                >\r\n                    <DatePicker\r\n                        style={datePicker}\r\n                        placeholder=\"Date of birthday\"\r\n                        onChange={handleDate}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"gender\"\r\n                >\r\n                    <Select\r\n                        placeholder=\"Gender\"\r\n                        allowClear\r\n                    >\r\n                        {gender.map((value, index) => <Select.Option key={index} value={value.id}>{value.gender}</Select.Option>)}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"city\"\r\n                >\r\n                    <Select placeholder=\"City\" allowClear>\r\n                        {cities.map((value, index) => <Select.Option key={index} value={value.id}>{value.city}</Select.Option>)}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"address\"\r\n                >\r\n                    <Input\r\n                        placeholder=\"Address\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"mobileNumber\"\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    <Input\r\n                        placeholder=\"Mobile\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"comment\"\r\n                >\r\n                    <TextArea\r\n                        row={4}\r\n                        placeholder=\"Comment\"\r\n                    />\r\n                </Form.Item>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Form.Item name=\"status\" valuePropName=\"checked\">\r\n                        <Checkbox defaultChecked={true}>Status</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"favorite\" valuePropName=\"checked\">\r\n                        <Checkbox defaultChecked={true}>Favorite</Checkbox>\r\n                    </Form.Item>\r\n                </div>\r\n                <Form.Item >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form.Item>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CreateUpdate\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nconst DeleteContact = ({ isVisible, handleOk, handleCancel }) => {\r\n    return (\r\n        <Modal\r\n            title=\"კონტაქტის წაშლა\"\r\n            visible={isVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n        >\r\n            <p>წაიშალოს მონიშნული კონტაქტი?</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteContact\r\n","import React from 'react'\r\n\r\nconst Notification = () => <p>Please, Select user!</p>\r\n\r\nexport default Notification","import React, { useContext, useState } from 'react'\r\nimport { Modal } from 'antd'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\n\r\nconst GeneralModal = props => {\r\n    const { isModalVisible, setIsModalVisible } = useContext(GlobalContext);\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            header={false}\r\n            footer={false}\r\n            visible={isModalVisible}\r\n            onCancel={handleCancel}\r\n        >\r\n            <div className=\"general-modal\">\r\n                {props.children}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GeneralModal\r\n","import React from 'react'\r\n\r\nconst Read = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Read\r\n","import React, { useState, useContext } from 'react'\r\nimport CreateUpdate from './CreateUpdate'\r\n//import Read from './Read'\r\nimport { GlobalContext } from '../context/GlobalStates'\r\nimport DeleteContact from './DeleteContact'\r\nimport Notification from './Notification'\r\nimport { Button } from 'antd'\r\nimport GeneralModal from './GeneralModal'\r\nimport Read from './Read'\r\n\r\nconst CrudButtons = () => {\r\n    const [type, settype] = useState('CREATE')\r\n    const { contactID, setContactID, setIsModalVisible } = useContext(GlobalContext)\r\n\r\n    const childForModal = type => {\r\n        if (type === 'CREATE' || type === 'UPDATE') return <CreateUpdate />\r\n        else if (type === 'READ') return <Read />\r\n        else if (type === 'DELETE') return <DeleteContact />\r\n        else if (type === 'NOTIFICATION') return <Notification />\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <GeneralModal>\r\n                {childForModal(type)}\r\n            </GeneralModal>\r\n\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setIsModalVisible(true)\r\n                    setContactID(0)\r\n                    settype('CREATE')\r\n                }}\r\n            >\r\n                Create\r\n            </Button>\r\n\r\n            <Button\r\n                onClick={() => {\r\n                    setIsModalVisible(true)\r\n                    if (contactID > 0) settype('READ')\r\n                    else settype('NOTIFICATION')\r\n                }}\r\n            >\r\n                Read\r\n            </Button>\r\n\r\n            <Button\r\n                onClick={() => {\r\n                    setIsModalVisible(true)\r\n                    if (contactID > 0) settype('UPDATE')\r\n                    else settype('NOTIFICATION')\r\n                }}\r\n            >\r\n                Update\r\n            </Button>\r\n\r\n            <Button\r\n                onClick={() => {\r\n                    setIsModalVisible(true)\r\n                    if (contactID > 0) settype('DELETE')\r\n                    else settype('NOTIFICATION')\r\n                }}\r\n                danger\r\n            >\r\n                Delete\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudButtons","import React from 'react'\r\nimport './index.css'\r\nimport ContactList from './pages/ContactList'\r\nimport Search from './components/Search'\r\nimport Footer from './components/Footer'\r\nimport Header from './components/Header'\r\nimport CrudButtons from './components/CrudButtons'\r\nimport { GlobalProvider } from './context/GlobalStates'\r\n\r\nconst App = () => {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"container\">\r\n        <header className=\"header\">\r\n          <Header />\r\n        </header>\r\n        <div className=\"main\">\r\n          <section className=\"contact-list\">\r\n            <CrudButtons />\r\n            <ContactList />\r\n          </section>\r\n          <section className=\"search\">\r\n            <Search />\r\n          </section>\r\n        </div>\r\n        <footer className=\"footer\">\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    </GlobalProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://young-tor-17286.herokuapp.com/'\r\naxios.defaults.headers.post['Content-Type'] = 'application/json'\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}